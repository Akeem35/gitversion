name: Commit Message Check

on:
  pull_request:
    types: 
      - opened
      - edited
      - reopened
      - synchronize
    branches:
      - galaxy
      
jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Define Version of release
      run: echo "test"
    - name: Parse Jira Keys from Commit
      id: jira_keys
      if: always()
      uses: HighwayThree/jira-extract-issue-keys@master
      with:
        is-pull-request: ${{ github.event_name == 'pull_request' }}
        parse-all-commits: ${{ github.event_name == 'push' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Release Version
      run: |
        versionName="3.0.0"
        curl -X POST --url https://okakoro.atlassian.net/rest/api/3/version -u raulakeem35@gmail.com:${{ secrets.JIRA_TOKEN }} --header 'Content-Type: application/json; charset=utf-8' -d '{"archived":false,"name":"$versionName","description": "An excellent version","projectId": 10000 }'  
    - name: Set fixed version to Jira keys
      run: |
        variable="${{ steps.jira_keys.outputs.jira-keys }}"
        echo $variable
        for i in ${variable//,/ }
        do
          # call your procedure/other scripts here below
          echo "$i"
          curl -X PUT --url https://okakoro.atlassian.net/rest/api/2/issue/$i -u raulakeem35@gmail.com:${{ secrets.JIRA_TOKEN }} --header 'Content-Type: application/json; charset=utf-8' -d '{"update":{ "fixVersions": [{"add": {"name": "$versionName"}}]}}'
        done
        
        
  
        

        
